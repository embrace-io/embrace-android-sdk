[versions]

# Some dependencies are pinned to old versions because of an unpatched AGP issue in 7.x: https://issuetracker.google.com/issues/377760847
detektGradlePlugin = "1.23.7"
junit = "4.13.2"
kotlinExposed = "1.8.22"
dokka = "1.9.20"
lint = "31.7.3"
openTelemetryCore = "1.45.0"
openTelementrySemConv = "1.27.0-alpha"
moshi = "1.15.1"
lifecycle = "2.7.0" # version pinned to 2.7.0 because of AGP bug
protobuf = "4.29.0"
profileinstaller = "1.3.1" # version pinned to 1.3.1 because of AGP bug
okhttp = "4.12.0"
firebase = "23.1.0"
compose = "1.0.5"
robolectric = "4.12.1"
mockk = "1.13.13"
androidxTest = "1.6.1"
androidxOrchestrator = "1.5.1"
androidxRunner = "1.6.2"
androidxJunit = "1.2.1"
mockwebserver = "4.12.0"

[libraries]
detekt-gradle-plugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detektGradlePlugin" }
dokka-gradle-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
lifecycle-runtime = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-compiler = { group = "androidx.lifecycle", name = "lifecycle-compiler", version.ref = "lifecycle" }
lifecycle-process = { group = "androidx.lifecycle", name = "lifecycle-process", version.ref = "lifecycle" }
lifecycle-testing = { group = "androidx.lifecycle", name = "lifecycle-runtime-testing", version.ref = "lifecycle" }

moshi = { group = "com.squareup.moshi", name = "moshi", version.ref = "moshi" }
moshi-kotlin-codegen = { group = "com.squareup.moshi", name = "moshi-kotlin-codegen", version.ref = "moshi" }
opentelemetry-bom = { group = "io.opentelemetry", name = "opentelemetry-bom", version.ref = "openTelemetryCore" }
opentelemetry-api = { group = "io.opentelemetry", name = "opentelemetry-api"}
opentelemetry-sdk = { group = "io.opentelemetry", name = "opentelemetry-sdk"}
opentelemetry-context = { group = "io.opentelemetry", name = "opentelemetry-context"}
opentelemetry-semconv = { group = "io.opentelemetry.semconv", name = "opentelemetry-semconv", version.ref = "openTelementrySemConv" }
opentelemetry-semconv-incubating = { group = "io.opentelemetry.semconv", name = "opentelemetry-semconv-incubating", version.ref = "openTelementrySemConv" }
protobuf-java = { group = "com.google.protobuf", name = "protobuf-java", version.ref = "protobuf" }
protobuf-java-util = { group = "com.google.protobuf", name = "protobuf-java-util", version.ref = "protobuf" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlinExposed" }
profileinstaller = { group = "androidx.profileinstaller", name = "profileinstaller", version.ref = "profileinstaller" }
dokka-convert = { group = "org.jetbrains.dokka", name = "kotlin-as-java-plugin", version.ref = "dokka" }
dokka-docs = { group = "org.jetbrains.dokka", name = "android-documentation-plugin", version.ref = "dokka" }
lint-api = { group = "com.android.tools.lint", name = "lint-api", version.ref = "lint" }
lint-tests = { group = "com.android.tools.lint", name = "lint-tests", version.ref = "lint" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
firebase-messaging = { group = "com.google.firebase", name = "firebase-messaging", version.ref = "firebase" }
compose = { group = "androidx.compose.ui", name = "ui", version.ref = "compose" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidxTest" }
androidx-test-junit = { module = "androidx.test.ext:junit", version.ref = "androidxJunit" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxRunner" }
androidx-test-orchestrator = { module = "androidx.test:orchestrator", version.ref = "androidxOrchestrator" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlinExposed" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detektGradlePlugin" }

[plugins]
