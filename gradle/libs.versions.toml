[versions]

# Some dependencies are pinned to old versions because of an unpatched AGP issue in 7.x: https://issuetracker.google.com/issues/377760847
binaryCompatibilityValidator = "0.18.1"
agp = "8.13.0"
junit = "4.13.2"
kotlinExposed = "1.9.25"
dokka = "1.9.20"
kotlinGradlePlugin = "2.1.21"
koverGradlePlugin = "0.9.2"
lint = "31.13.0"
openTelemetryCore = "1.53.0"
openTelementrySemConv = "1.29.0-alpha"
moshi = "1.15.2"
lifecycle = "2.7.0" # version pinned to 2.7.0 because of AGP bug
annotation = "1.9.1"
otelKotlin = "0.5.1"
protobuf = "4.32.1"
profileinstaller = "1.3.1" # version pinned to 1.3.1 because of AGP bug
okhttp = "4.12.0"
firebase = "25.0.1"
compose = "1.0.5"
robolectric = "4.12.1"
mockk = "1.14.5"
androidxTest = "1.7.0"
androidxOrchestrator = "1.6.1"
androidxRunner = "1.7.0"
androidxJunit = "1.3.0"
ksp = "2.1.21-2.0.2"
appcompat = "1.7.1"
asmUtil = "9.7"
gradleTestKit = "8.11.1"
zstdJni = "1.5.7-4"
detekt = "1.23.8"
buildconfig = "5.6.8"
agp-api = "7.4.2"
apktoolLib = "2.11.1"
bundletool = "1.18.1"
vanniktechMavenPublish = "0.34.0"
androidxBenchmark = "1.4.1"

[libraries]
binary-compatibility-validator = { module = "org.jetbrains.kotlinx:binary-compatibility-validator", version.ref = "binaryCompatibilityValidator" }
detekt-gradle-plugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
vanniktech-maven-publish = { module = "com.vanniktech.maven.publish:com.vanniktech.maven.publish.gradle.plugin", version.ref = "vanniktechMavenPublish" }
agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinGradlePlugin" }
lifecycle-runtime = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-compiler = { group = "androidx.lifecycle", name = "lifecycle-compiler", version.ref = "lifecycle" }
lifecycle-process = { group = "androidx.lifecycle", name = "lifecycle-process", version.ref = "lifecycle" }
lifecycle-testing = { group = "androidx.lifecycle", name = "lifecycle-runtime-testing", version.ref = "lifecycle" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "annotation" }

moshi = { group = "com.squareup.moshi", name = "moshi", version.ref = "moshi" }
moshi-kotlin-codegen = { group = "com.squareup.moshi", name = "moshi-kotlin-codegen", version.ref = "moshi" }
opentelemetry-bom = { group = "io.opentelemetry", name = "opentelemetry-bom", version.ref = "openTelemetryCore" }
opentelemetry-api = { group = "io.opentelemetry", name = "opentelemetry-api" }
opentelemetry-sdk = { group = "io.opentelemetry", name = "opentelemetry-sdk" }
opentelemetry-context = { group = "io.opentelemetry", name = "opentelemetry-context" }
opentelemetry-semconv = { group = "io.opentelemetry.semconv", name = "opentelemetry-semconv", version.ref = "openTelementrySemConv" }
opentelemetry-semconv-incubating = { group = "io.opentelemetry.semconv", name = "opentelemetry-semconv-incubating", version.ref = "openTelementrySemConv" }
protobuf-java = { group = "com.google.protobuf", name = "protobuf-java", version.ref = "protobuf" }
protobuf-java-util = { group = "com.google.protobuf", name = "protobuf-java-util", version.ref = "protobuf" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlinExposed" }
profileinstaller = { group = "androidx.profileinstaller", name = "profileinstaller", version.ref = "profileinstaller" }
lint-api = { group = "com.android.tools.lint", name = "lint-api", version.ref = "lint" }
lint-tests = { group = "com.android.tools.lint", name = "lint-tests", version.ref = "lint" }
okhttp-bom = { group = "com.squareup.okhttp3", name = "okhttp-bom", version.ref = "okhttp" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
firebase-messaging = { group = "com.google.firebase", name = "firebase-messaging", version.ref = "firebase" }
compose = { group = "androidx.compose.ui", name = "ui", version.ref = "compose" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidxTest" }
androidx-test-junit = { module = "androidx.test.ext:junit", version.ref = "androidxJunit" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxRunner" }
androidx-test-orchestrator = { module = "androidx.test:orchestrator", version.ref = "androidxOrchestrator" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver"}
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlinExposed" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
asm-util = { module = "org.ow2.asm:asm-util", version.ref = "asmUtil" }
gradle-test-kit = { module = "dev.gradleplugins:gradle-test-kit", version.ref = "gradleTestKit" }
zstd-jni = { module = "com.github.luben:zstd-jni", version.ref = "zstdJni" }
agp-api = { module = "com.android.tools.build:gradle-api", version.ref = "agp-api" }
apktool-lib = { module = "org.apktool:apktool-lib", version.ref = "apktoolLib" }
bundletool = { module = "com.android.tools.build:bundletool", version.ref = "bundletool" }
opentelemetry-kotlin = { module = "io.embrace.opentelemetry.kotlin:opentelemetry-kotlin", version.ref = "otelKotlin" }
opentelemetry-kotlin-api = { module = "io.embrace.opentelemetry.kotlin:opentelemetry-kotlin-api", version.ref = "otelKotlin" }
opentelemetry-kotlin-api-ext = { module = "io.embrace.opentelemetry.kotlin:opentelemetry-kotlin-api-ext", version.ref = "otelKotlin" }
opentelemetry-kotlin-sdk = { module = "io.embrace.opentelemetry.kotlin:opentelemetry-kotlin-implementation", version.ref = "otelKotlin" }
opentelemetry-kotlin-compat = { module = "io.embrace.opentelemetry.kotlin:opentelemetry-kotlin-compat", version.ref = "otelKotlin" }
opentelemetry-kotlin-noop = { module = "io.embrace.opentelemetry.kotlin:opentelemetry-kotlin-noop", version.ref = "otelKotlin" }
opentelemetry-kotlin-semconv = { module = "io.embrace.opentelemetry.kotlin:opentelemetry-kotlin-semconv", version.ref = "otelKotlin" }
opentelemetry-java-aliases = { module = "io.embrace.opentelemetry.kotlin:opentelemetry-java-typealiases", version.ref = "otelKotlin" }
androidx-benchmark-junit4 = { group = "androidx.benchmark", name = "benchmark-junit4", version.ref = "androidxBenchmark" }

[plugins]
google-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
agp-library = { id = "com.android.library", version.ref = "agp" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinGradlePlugin" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "koverGradlePlugin" }
benchmark = { id = "androidx.benchmark", version.ref = "androidxBenchmark" }
