name: Release

env:
  SONATYPE_USERNAME: embrace-io
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  MAVEN_QA_USER: github
  MAVEN_QA_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  mavenSigningKeyId: ${{ secrets.MAVEN_ANDROID_SIGNING_KEY }}
  mavenSigningKeyRingFileEncoded: ${{ secrets.MAVEN_ANDROID_GPG_KEY }}
  mavenSigningKeyPassword: ${{ secrets.MAVEN_ANDROID_SIGNING_PASSWORD }}

on:
  workflow_dispatch:
    inputs:
      version_to_release:
        description: 'SDK version this workflow run will release. Specify <major.minor> only, without the patch number, e.g. `6.3`. It will use the branch `release/<version>`.'
        required: true
      patch_version_of_release:
        description: 'The patch version for this release, i.e. the third number per semantic versioning <major.minor.patch>. If it is not a hotfix, use the default of 0'
        required: true
        default: '0'

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        jdk-version: ["11"]
        ndk-version: ["21.4.7075529"]
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3
        with:
          ref: release/${{ github.event.inputs.version_to_release }}
          fetch-depth: 0
          token: ${{ secrets.CD_GITHUB_TOKEN }}

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Gradlew Release to maven central
        run: |
          ./gradlew findSonatypeStagingRepository releaseSonatypeStagingRepository -Dorg.gradle.parallel=false --stacktrace
#          TODO: check if swazzler gets released too

      - name: Generate Documentation
        run: ./gradlew dokkaHtml

      - name: Configure git
        run: |
          git config --global user.name 'embrace-ci[bot]'
          git config --global user.email 'embrace-ci@users.noreply.github.com'
          git config --global url."https://${{ secrets.CD_GITHUB_USER }}:${{ secrets.CD_GITHUB_TOKEN }}@github.com".insteadOf "https://github.com"

      - name: Publish gh-pages
        run: |
          mv docs .docs-newly-generated # new docs generated by previous step
          git checkout gh-pages
          git rm -rf docs # old docs on gh-pages branch
          mv .docs-newly-generated docs
          date > docs/version.txt
          echo ${{ github.sha }} >> docs/version.txt
          echo ${{ github.event.inputs.version_to_release }}.${{ github.event.inputs.patch_version_of_release }} >> docs/version.txt
          git add -f docs
          git config --global user.name "embrace-ci"
          git config --global user.email "embrace-ci@users.noreply.github.com"
          git commit --allow-empty --message 'CI/CD: Automatically generated documentation for ${{ github.event.inputs.version_to_release }}.${{ github.event.inputs.patch_version_of_release }}' docs/
          git push --force origin gh-pages

      - name: Record SDK Version History (${{ github.event.inputs.version_to_release }}.${{ github.event.inputs.patch_version_of_release }})
        run: |
          curl -X POST ${{ vars.SDK_VERSION_URL }}/android/version/ -H 'X-Embrace-CI: ${{ secrets.SDK_VERSION_TOKEN }}' -H 'Content-Type: application/json' -d '{"version": "${{ github.event.inputs.version_to_release }}.${{ github.event.inputs.patch_version_of_release }}"}'

      - name: Cleanup Gradle Cache
        # Based on https://docs.github.com/en/actions/guides/building-and-testing-java-with-gradle#caching-dependencies
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties